
BANKS vs BLOCKCHAINS

BANKS:
In a traditional bank, after signing in with your username and password, you can:
1. View your balance.
2. Transfer money.
3. Receive money.

BLOCKCHAINS:
When creating a wallet in blockchain, the phrase "Not your keys, not your crypto" applies. You need to have a public-private key pair.

- Public Key: 
  - This can be shared with anyone and is used to track the balance (e.g., through solscan.io). 
  - It's only needed to receive money.
  
- Private Key: 
  - A secret string that must never be shared. 
  - It is required to send money.

A private key is essentially an array of 32 bytes, for example:
[122, 232, 8, 231, ...] (32 values) -> converted into a string.

ENCODING:
Each byte (ranging from 0 to 255) represents a character.

Public keys in Solana are stored in Base 58 encoding.

There are different types of encodings:
1. ASCII: Standard character encoding.
2. HEX (Base 16): Uses characters [0, 1, 2, ..., A, B, C, ..., F]. (4 bits per character)
3. BASE 64: Uses characters [a-z, A-Z, +, /]. (6 bits per character)
4. BASE 58: Uses characters from Base 64 but excludes [I, O, l, 0, +, /] to avoid confusion.

Solana addresses are written in Base 58.

HASHING vs ENCRYPTION:

- HASHING:
  - A string is passed through a hashing function to generate a hash (which cannot be reversed).

- ENCRYPTION:
  - Encryption is a process where a string is encoded in a way that can later be decoded (decrypted).

  string -> (encryption + key) -> encrypted message -> (decryption + key) -> string

ASYMMETRIC ENCRYPTION IN BLOCKCHAIN:
In blockchain, encryption is asymmetric, meaning the keys for encryption and decryption are different. 
- Private Key: Used for encryption.
- Public Key: Used for decryption.

KEY PAIR (Public-Private):
The public-private key pair is mathematically related but cannot be derived from each other. You can derive the public key from the private key, but you cannot derive the private key from the public key.

COMMON ASYMMETRIC ENCRYPTION ALGORITHMS:
1. RSA: Rivest-Shamir-Adleman
2. ECC (ECDSA): Elliptic Curve Cryptography (used in Ethereum and Bitcoin)
3. EdDSA: Edward-curve Digital Signature Algorithm (used in Solana)

USE CASES OF PUBLIC KEY CRYPTOGRAPHY:
1. SSL/TLS certificates for secure connections.
2. SSH keys for server access (e.g., push to GitHub).
3. Blockchains and cryptocurrencies.

STEPS IN PUBLIC KEY CRYPTOGRAPHY:
1. Create a public-private key pair.
2. Define the message to sign.
3. Convert the message into a Uint8Array.
4. Sign the message using the private key.
5. Verify the message using the public key.

TRANSACTIONS:
USER SIDE:
1. Create a public/private key pair.
2. Create a transaction.
3. Hash the transaction.
4. Sign the transaction with the private key.
5. Send the raw transaction, signature, and public key to the blockchain node.

MINER SIDE:
1. Hashes the original message.
2. Verifies the signature.
3. Validates the transaction.
4. Broadcasts the transaction on the blockchain.

HD WALLETS:
1. A 12-word mnemonic phrase is used to create a seed, which can be used to generate all public-private key pairs.
2. Public-private key pairs can be derived from the seed phrase using a derivation path.
3. Wallets for different cryptocurrencies can be generated from the same master seed phrase.
- 0: Bitcoin
- 60: Ethereum
- 501: Solana

WALLET ORGANIZERS:
Popular wallet organizers include:
- Phantom
- Backpack
- MetaMask