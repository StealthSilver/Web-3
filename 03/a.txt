BANKS vs BLOCKCHAINS

in banks after the username and password signin we can 
1. see balance
2. transfer money
3. recieve money

in blockchains if we want to create a wallet:
"not your keys, not your cryoto"

we need to have a public private key pair
with every public key there is an associated private key


1. public key can be shared to everyone and it can be used to track the balances (solscan.io), to recieve the money only public key is required
2. private key is a secret string it must not be shared, for sending money private key is also required


private key is just an array of 32 bytes 
[122, 232, 008, 231..... 32 times] -> (converted into a string)

ENCODING 

every byte from 0 to 255 represents a character

the public keys in solana are stored in base 58 encoding

there are different types of encodings 
1. ASCII
2. HEX (4 bits at a time) [0 ,1, 2 .... A, B ,C ,D ,E ,F] (base 16 encoding)
3. BASE 64 (a-z , A-Z, + , /) (64 characters) (6 characters at a time) 
4. BASE 58, all elements from base 64  but dosent include (I , O , l , 0, + , /) as they look simmilar

the solana address are written in base 58

HASHING vs ENCRYPTION

string -> hashing function -> hash (can't be reversed)

encryption is a process od coding that can be decoded (dcrypted)

string -> (encryption + key) -> encrypted message -> (decryption + key) -> string 

in the blockchain the encryption is asymmetric, which means that the key for encryption and decryption are different
for the encryption we use the privte key and for the decryption public key is used 

therefore for asymmetric encryption (public key cryptographic) a public, private key pair is required

the key pair is mathematically related but cannot be derived from each other

we can derive the public key from the privbate key but the opposite is not true

Commonly available asymm encryption algorithms :

1. RSA : Rivest-Shamir-Adleman
2. ECC : Elliptic Curve Cryptography (ECDSA) - ETH and BTC 
3. EdDSA - Edward-curve Digital Signature Algorithm - SOL

usecases of public key cryptography 

1. SSL/TLS certificates
2. SSH keys to connect to servers/push to github
3. Blockchains and cryptocurrenies

Public Key Cryptography

1. Create a public-private key pair
2. Define the message to sign
3. Convert message in UInt8Array 
4. Sign the message using the private key 
5. Verify the message using the public key


